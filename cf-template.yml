AWSTemplateFormatVersion: '2010-09-09'

Description: AWS API Gateway with a Lambda Integration

Resources:

  ApiGatewayApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Description: AWS GatewayAPI to interface with LambdaFunction
      Name: iris-gateway
      ProtocolType: 'HTTP'
      Target: !GetAtt LambdaFunction.Arn
      CredentialsArn: !GetAtt ApiGatewayIamRole.Arn

  ApiGatewayIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: 'Allow'
            Principal:
              Service:
                - 'apigateway.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      Policies:
        - PolicyName: LambdaAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 'lambda:*'
                Resource: !GetAtt LambdaFunction.Arn

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: AWS Lambda function from Image
      Code:
        ImageUri: '213386773652.dkr.ecr.ap-south-1.amazonaws.com/irisclassifier:latest'
      FunctionName: 'lambda-function'
      MemorySize: 4000
      PackageType: 'Image'
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: 60

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*
